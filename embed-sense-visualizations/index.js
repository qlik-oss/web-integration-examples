require('babel-polyfill');

const config = require('./config');
const { getUser, getTenant, getAppList, baseUrl } = require('./comm');

const link = document.createElement('link');
link.rel = 'stylesheet';
link.href = `${baseUrl}/resources/autogenerated/qlik-styles.css`;
document.head.appendChild(link);

const script = document.createElement('script');
script.src = `${baseUrl}/resources/assets/external/requirejs/require.js`;
script.onload = async () => {
  requirejs.config({
    baseUrl: baseUrl + '/resources',
    webIntegrationId: config.webIntegrationId
  });

  // build a single-sign on URL and return back here once completed:
  const loginUrl = new URL(`${baseUrl}/login`);
  loginUrl.searchParams.append('returnto', location.href);
  loginUrl.searchParams.append('qlik-web-integration-id', config.webIntegrationId);
  
  const loginBtn = document.querySelector('#login');
  loginBtn.addEventListener('click', () => { location.href = loginUrl; });
  
  const logoutBtn = document.querySelector('#logout');
  logoutBtn.addEventListener('click', () => { location.href = new URL(`${baseUrl}/logout`); });

  const [user, tenant] = await Promise.all([getUser(), getTenant()]);
  if (user || tenant) {
    loginBtn.disabled = true;
    logoutBtn.disabled = false;
    document.querySelector('.logged_in').style.opacity = 0;
    document.querySelector('.logged_out').style.opacity = 1;
    document.querySelector('#user').innerHTML = user.name;
    document.querySelector('#tenant').innerHTML = tenant.name;
    initMashup();
  } else {
    loginBtn.disabled = false;
    logoutBtn.disabled = true;
    document.querySelector('.logged_in').style.opacity = 1;
    document.querySelector('.logged_out').style.opacity = 0;
  }
};

document.body.appendChild(script);

function renderError(error) {
  document.querySelector('#QV01').innerHTML = `Failed to render charts: <pre><code>${error.error || error.stack || error.message || error}</code></pre>`;
}

async function initMashup() {
  const list = await getAppList();
  const ulElement = document.createElement('ul');

  list.data.forEach(appItem => {
    const liElement = document.createElement('li');
    liElement.innerHTML = `<b>${appItem.name}</b> - ${appItem.resourceId}`;
    ulElement.appendChild(liElement);
  });
  document.querySelector('#app_list').appendChild(ulElement);

  const appIds = list.data
    .filter(appItem => appItem.name.indexOf('drug') !== -1)
    .map(appItem => appItem.resourceId);

  requirejs(['js/qlik'], async (qlik) => {
    const app = qlik.openApp(appIds.length ? appIds[0] : config.appId, config);
    app.on('error', renderError);
    app.getObject('CurrentSelections', 'CurrentSelections');

    try {
    //Create visualizations
      const vis = await app.visualization.create(
        'piechart', [
          {
            'qLibraryId': '4b9e766f-5842-46b5-ab3d-15c6b3020071',
            'qDef': {
              'qGrouping': 'N',
              'qFieldDefs': [],
              'qFieldLabels': [],
            }
          }, {
            'qDef': {
              'qLabel': '',
              'qDescription': '',
              'qTags': [],
              'qGrouping': 'N',
              'qDef': 'count(Drug_caseID)',
            }
          }
        ],{
          'title': 'Total drug cases per continent',
        }
      );

    vis.show('QV01');

    const vis2 = await app.visualization.get('ced9d474-cad3-4df5-bc09-06d27dcf634a');

    vis2.show('QV02');
    } catch(error) {
      renderError(error);
    }
  });
}
