require('babel-polyfill');
import { downloadVisualization } from './reporting-utils';

const config = require('./config');
const { getUser, getTenant, getAppList, baseUrl } = require('./comm');

const link = document.createElement('link');
link.rel = 'stylesheet';
link.href = `${baseUrl}/resources/autogenerated/qlik-styles.css`;
document.head.appendChild(link);

const script = document.createElement('script');
script.src = `${baseUrl}/resources/assets/external/requirejs/require.js`;
script.onload = async () => {
  console.log('ðŸš€ ~ file: index.js:19 ~ script.onload= ~ requirejs:', requirejs);
  requirejs.config({
    baseUrl: baseUrl + '/resources',
    // webIntegrationId: config.webIntegrationId,
  });

  initMashup();
};

document.body.appendChild(script);

function renderError(error) {
  document.querySelector('#QV01').innerHTML = `Failed to render charts: <pre><code>${
    error.error || error.stack || error.message || error
  }</code></pre>`;
}

async function initMashup() {
  document.querySelector('#QV01').innerHTML = 'Generating visualization...';
  document.querySelector('#QV02').innerHTML = 'Generating visualization...';

  requirejs(['js/qlik'], (qlik) => {
    const app = qlik.openApp(config.appId, config);
    console.log('ðŸš€ ~ file: index.js:115 ~ requirejs ~ app:', app);
    app.on('error', renderError);
    app.getObject('CurrentSelections', 'CurrentSelections');

    try {
      app.visualization
        .get('nunQpgh')
        .then((vis) => {
          vis.show('QV02');
        })
        .catch((err) => console.log(err));
    } catch (error) {
      console.log(error);
      renderError(error);
    }
  });
}
